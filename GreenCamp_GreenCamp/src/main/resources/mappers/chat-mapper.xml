<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">

<resultMap type="ChatRoom" id="chatRoomResultSet">
	<id property="chatroomNo" column="CHATROOM_NO"/>
	<result property="mId" column="M_ID"/>
	<result property="usedId" column="USED_ID"/>
	<result property="usedNo" column="USED_NO"/>
	<result property="title" column="TITLE"/>
</resultMap>

<resultMap type="Message" id="messageResultSet">
	<id property="messageNo" column="MESSAGE_NO"/>
	<result property="sender" column="SENDER"/>
	<result property="receiver" column="RECEIVER"/>
	<result property="content" column="CONTENT"/>
	<result property="sendTime" column="SENDTIME"/>
	<result property="readTime" column="READTIME"/>
	<result property="chatRoomNo" column="CHATROOM_NO"/>
	<result property="mId" column="M_ID"/>
	<result property="usedId" column="USED_ID"/>
	<result property="usedNo" column="USED_NO"/>
	<result property="title" column="TITLE"/>
</resultMap>

<!-- resultType = "ChatRoom" -->
<select id ="isRoom" resultMap="chatRoomResultSet">
<!-- select * from CHATROOM WHERE m_id = #{mId} and USED_ID = #{usedId}  -->
select * from CHATROOM where CHATROOM_NO = #{chatroomNo}
</select>

<!-- 유저 메시지조회 -->
<select id = "getMessageList" resultMap="messageResultSet">
<!-- select m.* , user_name, user_profileImagePath from MESSAGE m left outer join USER u on m.message_sender = u.user_id where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id}
 -->
 
 SELECT * FROM MESSAGE where sender = #{mId} or receiver = #{mId}
</select>

<!-- 유저 채팅방 조회 -->
<select id = "getRoomList" resultMap="chatRoomResultSet">
select * from CHATROOM WHERE m_id = #{mId} or USED_ID = #{mId}
</select>

<!-- 메시지에서 가장 나중에 보낸 메시지번호값들을 받아서 조회  -->
<select id="getMaxMessageLast" resultMap="messageResultSet"> 
select * from MESSAGE where MESSAGE_NO IN (select  max(MESSAGE_NO)  from message where sender =#{mId} or receiver =#{mId} GROUP BY CHATROOM_NO)
</select>    

<!-- 채팅방번호로 대화내용 가져오기 -->
<select id="getRoomMessageList"  resultMap="messageResultSet">
SELECT * FROM MESSAGE where CHATROOM_NO=#{chatroomNo}
</select>

<!-- 채팅보면 읽은시간(READTIME) 업뎃2 -->
<update id="updateReadtime" >
UPDATE MESSAGE set READTIME= TO_CHAR(SYSDATE,'YYYY"년" MONTHDD"일" AM HH:MI')
 where READTIME is null and CHATROOM_NO=#{chatRoomNo} and receiver=#{receiver}
</update>

<!-- 메시지 전송 클릭시 메시지 저장 -->
<insert id = "insertMessage">
insert into MESSAGE 
values(SEQ_MESSAGE_NO.nextval, #{sender}, #{receiver}, #{content},
 TO_CHAR(SYSDATE,'YYYY"년" MONTHDD"일" AM HH:MI'), '',
 #{chatRoomNo} ,(select m_id from CHATROOM where CHATROOM_NO = #{chatRoomNo}),
 (select used_id from CHATROOM where CHATROOM_NO = #{chatRoomNo}), #{usedNo},
 (select title from CHATROOM where CHATROOM_NO = #{chatRoomNo}))
</insert>

<!-- 중고거래에서 채팅하기 클릭시 채팅방생성 -->
<insert id="createChatRoom" >
<!-- 채팅방(채팅방번호,유저아이디,중고거래할아이디,중고거래물품고유번호,제목) -->
insert into CHATROOM values(SEQ_CHATROOM_NO.NEXTVAL,#{mId},#{usedId},#{usedNo},#{title})
</insert>

<!-- 채팅방찾기(말건사람과 파는사람으로) -->
<select id="getChatRoomNo" resultMap="chatRoomResultSet">
select CHATROOM_NO from CHATROOM where M_ID=#{mId} and USED_ID=#{usedId}
</select>

<!-- <select id = "getRoomList2" resultType = "ChatRoom">
select * from CHATROOM where TUTOR_USER_user_id = #{TUTOR_USER_user_id}
</select>

<select id = "getRecentMessage" resultType = "Message">

select m.* , class_name, class_id , TUTOR_tutor_id from MESSAGE m left outer join CLASS c on m.CLASS_class_id = c.class_id 
where CHATROOM_chatroom_id = #{CHATROOM_chatroom_id} order by message_id desc limit 1;


</select>


<select id = "getTutorId" resultType = "String">
select tutor_id from TUTOR where USER_user_id = #{USER_user_id}
</select>

<update id ="updateReadTime">
update MESSAGE set message_readTime = NOW() where TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = TUTOR_USER_user_id and USER_user_id = #{USER_user_id};
</update>
<update id ="updateReadTimeTutor">
update MESSAGE set message_readTime = NOW() where TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};

</update>


<select id = "getUnReadCount" resultType = "int">

select count(*) from MESSAGE where USER_user_id = #{USER_user_id} and TUTOR_USER_user_id = #{TUTOR_USER_user_id} AND CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = TUTOR_USER_user_id;

</select>
<select id = "getUnReadCountTutor" resultType = "int">

select count(*) from MESSAGE where TUTOR_USER_user_id =#{TUTOR_USER_user_id} and CLASS_class_id = #{CLASS_class_id} AND message_readTime = message_sendTime and message_sender = USER_user_id and USER_user_id = #{USER_user_id};

</select>

<select id = "getAllCount" resultType = "int">
select count(*) from MESSAGE WHERE (TUTOR_USER_user_id = #{TUTOR_USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}) or (USER_user_id = #{USER_user_id} and message_readTime = message_sendTime and message_sender != #{USER_user_id}); 

</select>

<insert id = "insertMessage">
insert into MESSAGE (message_sender , message_receiver, message_content, 
CHATROOM_chatroom_id, USER_user_id , TUTOR_USER_user_id, CLASS_class_id)
values (#{sender}, #{receiver}, #{content} , #{CHATROOM_NO} , #{m_id},
#{TUTOR_USER_user_id} , #{CLASS_class_id})
</insert>

<select id = "getPartner" resultType = "Message">
SELECT USER_user_id from MESSAGE where TUTOR_USER_user_id = #{TUTOR_USER_user_id} and CLASS_class_id = #{CLASS_class_id}
</select>
<select id = "getProfile" resultType = "String">
select user_profileImagePath from USER WHERE user_id = #{user_id}
</select>

<select id = "getName" resultType = "String">
select user_name from USER where user_id = #{user_id}
</select>

<insert id = "createRoom" parameterType="ChatRoom">
insert into CHATROOM (m_id , used_id, CLASS_class_id) 
values(#{mid}, #{usedId} , #{CLASS_class_id} )

</insert> -->

</mapper>
